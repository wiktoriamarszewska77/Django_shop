version: "3.9"
services:
  app:
    build: ./shop
    env_file:
      - shop/.env
    volumes:
      - ./shop:/app
    ports:
      - "8001:8001"
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8001
    depends_on:
      - postgres_db
      - redis
      - celery
      - localstack

  postgres_db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    env_file:
      - shop/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 30s
      retries: 6
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    build: ./shop
    env_file:
      - shop/.env
    volumes:
      - ./shop:/app
    depends_on:
      - postgres_db
      - redis
      - localstack
    command: celery -A shop worker -l INFO

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - DEBUG=${DEBUG:-0}
      - USE_S3=TRUE
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_STORAGE_BUCKET_NAME=report-bucket
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
